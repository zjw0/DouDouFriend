apply plugin: 'com.android.application'
// 依赖插件脚本
apply from: 'tinker-support.gradle'

android {
    signingConfigs {
//        config {
//            keyAlias 'doudoufriend'
//            keyPassword '100605'
//            storeFile file('D:/MyAndroidSpace/studio-demo/DouDouFriend/keystore/doudoufriend.jks')
//            storePassword '100605'
//        }
        debug {
            keyAlias 'doudoufriend'
            keyPassword '100605'
            storeFile file('F:\\MyAndroidSpace\\studio-demo\\MyWork\\keystore\\doudoufriend.jks')
            storePassword '100605'
        }
        release {
            keyAlias 'doudoufriend'
            keyPassword '100605'
            storeFile file('F:\\MyAndroidSpace\\studio-demo\\MyWork\\keystore\\doudoufriend.jks')
            storePassword '100605'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "cn.appoa.doudoufriend"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 3
        versionName "1.0.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        signingConfig signingConfigs.release
        ndk {
            //设置支持的SO库架构
            //abiFilters 'armeabi'
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
//            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def date = new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+08"))
            if (variant.buildType.name.equals('debug')) {
//                outputFileName = "DouDouFriend_${date}_${versionName}_${versionCode}_debug.apk"
                outputFileName = "app-release.apk"
            }
            if (variant.buildType.name.equals('release')) {
//                outputFileName = "DouDouFriend_${date}_${versionName}_${versionCode}.apk"
                outputFileName = "app-release.apk"
            }
        }
    }
    sourceSets.main {
        jniLibs.srcDirs 'src/main/jniLibs'
    }
    dexOptions {
        javaMaxHeapSize "4g"//解决编译内存不足
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

//    implementation 'com.android.support:appcompat-v7:27.1.1'
//    implementation 'com.android.support:design:27.1.1'
//    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//    implementation 'com.android.support:multidex:1.0.3'
//    implementation 'com.wangzhen:dark-status-bar:1.0.0'
//    implementation 'com.github.zjw0.MyWork:AFramework:v1.0.2'
//    implementation 'com.github.zjw0.MyWork:SmartRefreshLayoutFragment:v1.0.2'
//    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-18'
//    implementation 'com.zhy:autolayout:1.4.5'
//    implementation 'com.lzy.net:okgo:3.0.4'
//    implementation 'com.mindorks.android:prdownloader:0.4.0'
//    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.44'

//    implementation 'com.github.zjw0.MyAfWork:AFramework:1.0.3'
//    implementation 'com.github.zjw0.MyAfWork:SmartRefreshLayoutFragment:1.0.3'
//    implementation 'com.github.zjw0.MyAfWork:WxImageSelector:1.0.4'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.wangzhen:dark-status-bar:1.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.github.zjw0.MyAfWork:AFramework:1.0.4'
    implementation 'com.github.zjw0.MyAfWork:SmartRefreshLayoutFragment:1.0.4'
    implementation 'com.github.zjw0.MyAfWork:QrCodeScan:1.0.4'
    implementation 'com.github.zjw0.MyAfWork:AndroidImageCropper:1.0.4'
    implementation 'com.github.zjw0.MyAfWork:WxVoiceSelector:1.0.4'
    //日历框架
    implementation 'com.necer.ncalendar:ncalendar:4.3.8'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //数据库框架
    implementation 'org.litepal.android:java:3.0.0'
    //语音合成
    implementation files('libs/Msc.jar')
    //implementation files('F:/MyAndroidSpace/studio-demo/MyWork/libs/Msc.jar')

/*    //依赖这个原因后面讲
//    implementation 'com.android.support:multidex:1.0.3'
    //可选，用于生成application类
//    provided('com.tencent.tinker:tinker-android-anno:1.7.11')
    compileOnly('com.tencent.tinker:tinker-android-anno:1.7.11')
    //tinker的核心库
    api('com.tencent.tinker:tinker-android-lib:1.7.11')*/

    //注释掉原有bugly的仓库
    //compile 'com.tencent.bugly:crashreport:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.3.4
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.6'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release' //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
}

configurations.all {
    resolutionStrategy {
//        force 'com.android.support:support-v4:27.1.1'
//        force 'com.android.support:design:27.1.1'
        force 'com.android.support:design:28.0.0'
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}
